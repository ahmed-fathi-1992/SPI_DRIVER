
ECU_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000009a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  0000009a  0000010e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  00000110  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000097  00000000  00000000  000007dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      0000002f  00000000  00000000  00000873  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000118  00000000  00000000  000008a2  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000aaa  00000000  00000000  000009ba  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000044a  00000000  00000000  00001464  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003bf  00000000  00000000  000018ae  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000022c  00000000  00000000  00001c70  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000484  00000000  00000000  00001e9c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000082e  00000000  00000000  00002320  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e0  00000000  00000000  00002b4e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
 * 				- 0x00 -> Input
 * 				- 0xff -> Output
 */
void gpioPinDirection(uint8_t u8_port, uint8_t u8_pins, uint8_t u8_direction)
{
		switch (u8_port)
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
		{
			case 0:
			PORTA_DIR = PORTA_DIR & (~u8_pins);
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
			PORTA_DIR = PORTA_DIR |(u8_pins & u8_direction);
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
			break;
			case 1:
			PORTB_DIR = PORTB_DIR & (~u8_pins);
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
			PORTB_DIR = PORTB_DIR |(u8_pins & u8_direction);
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
			break;
			case 2:
			PORTC_DIR = PORTC_DIR & (~u8_pins);
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
			PORTC_DIR = PORTC_DIR |(u8_pins & u8_direction);
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
			break;
			case 3:
			PORTD_DIR = PORTD_DIR & (~u8_pins);
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
			PORTD_DIR = PORTD_DIR |(u8_pins & u8_direction);
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
#include "softwareDelay.h "

void softwareDelayMs(uint32_t u32_delay_in_ms)
{
		volatile uint32_t d=0;
		for(int y=0;y<u32_delay_in_ms;y++)
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 4b 00 	jmp	0x96	; 0x96 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
  6c:	cc 24       	eor	r12, r12
  6e:	c3 94       	inc	r12
  70:	e1 2c       	mov	r14, r1
  72:	00 e0       	ldi	r16, 0x00	; 0
  74:	20 e1       	ldi	r18, 0x10	; 16
  76:	40 e2       	ldi	r20, 0x20	; 32
 */ 

#include "softwareDelay.h "

void softwareDelayMs(uint32_t u32_delay_in_ms)
{
  78:	60 e4       	ldi	r22, 0x40	; 64
  7a:	80 e8       	ldi	r24, 0x80	; 128
  7c:	0e 94 47 00 	call	0x8e	; 0x8e <SPI_Init_>
  80:	80 e0       	ldi	r24, 0x00	; 0
  82:	01 c0       	rjmp	.+2      	; 0x86 <main+0x1a>
  84:	8b bb       	out	0x1b, r24	; 27
  86:	77 9b       	sbis	0x0e, 7	; 14
  88:	fd cf       	rjmp	.-6      	; 0x84 <main+0x18>
			}
		}
		
	
	
}
  8a:	8f b1       	in	r24, 0x0f	; 15
  8c:	fc cf       	rjmp	.-8      	; 0x86 <main+0x1a>

0000008e <SPI_Init_>:
  8e:	81 e6       	ldi	r24, 0x61	; 97
  90:	8d b9       	out	0x0d, r24	; 13
  92:	1e b8       	out	0x0e, r1	; 14
  94:	08 95       	ret

00000096 <_exit>:
  96:	f8 94       	cli

00000098 <__stop_program>:
  98:	ff cf       	rjmp	.-2      	; 0x98 <__stop_program>
